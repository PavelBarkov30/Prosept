# Хакатон Просепт Х Яндекс.практикум

## Команда №2

### Разработка рекомендательной модели на основе данных о товарах.



### Заказчик

ООО «ПРОСЕПТ» — российская производственная компания, специализирующаяся на выпуске профессиональной химии. В своей работе используют опыт ведущих мировых производителей и сырье крупнейших химических концернов. Производство и логистический центр расположены в непосредственной близости от Санкт-Петербурга, откуда продукция компании поставляется во все регионы России.

**Сайт:** https://prosept.ru/


### Описание проекта/

Заказчик производит несколько сотен различных товаров бытовой и промышленной химии, а затем продаёт эти товары через дилеров. Дилеры, в свою очередь, занимаются розничной продажей товаров в крупных сетях магазинов и на онлайн площадках.
Для оценки ситуации,  управления ценами и  бизнесом в целом, заказчик периодически собирает информацию о том, как дилеры продают их товар. Для этого они парсят сайты дилеров, а затем сопоставляют товары и цены.
Зачастую описание товаров на сайтах дилеров отличаются от того описания, что даёт заказчик. Например, могут добавляться новый слова (“универсальный”, “эффективный”), объём (0.6 л -> 600 мл). Поэтому сопоставление товаров дилеров с товарами производителя делается вручную.


**Цель этого проекта** - разработка решения, которое отчасти автоматизирует процесс сопоставления товаров. Основная идея - предлагать несколько товаров заказчика, которые с наибольшей вероятностью соответствуют размечаемому товару дилера. 
Предлагается реализовать это решение, как онлайн сервис, открываемый в веб-браузере. Выбор наиболее вероятных подсказок делается методами машинного обучения.


### Описание данных.
Заказчик предоставил несколько таблиц (дамп БД), содержащих необходимые данные:

1.`marketing_dealer` - список дилеров;
2.`marketing_dealerprice` - результат работы парсера площадок дилеров:
- `product_key` - уникальный номер позиции;
- `price` - цена;
- `product_url` - адрес страницы, откуда собраны данные;
- `product_name` - заголовок продаваемого товара;
- `date` - дата получения информации;
- `dealer_id` - идентификатор дилера (внешний ключ к marketing_dealer)
3.`marketing_product` - список товаров, которые производит и распространяет заказчик;
- `article` - артикул товара;
- `ean_13` - код товара (см. EAN 13)
- `name` - название товара;
- `cost` - стоимость;
- `min_recommended_price` - рекомендованная минимальная цена;
- `recommended_price` - рекомендованная цена;
- `category_id` - категория товара;
- `ozon_name` - названиет товара на Озоне;
- `name_1c` - название товара в 1C;
- `wb_name` - название товара на Wildberries;
- `ozon_article` - описание для Озон;
- `wb_article` - артикул для Wildberries;
- `ym_article` - артикул для Яндекс.Маркета;

4.`marketing_productdealerkey` - таблица матчинга товаров заказчика и товаров дилеров
- `key` - внешний ключ к marketing_dealerprice
- `product_id` - внешний ключ к marketing_product
- `dealer_id` - внешний ключ к marketing_dealer




### Этапы выполнения проекта:

1) **Выгрузка и исследовательскй анализ данных.**
- В таблице dealers собрана информация по названиям дилеров и их id.
Всего в таблице представлено 18 уникальных дилеров.

- В таблице marketing_dealerprice из 20416 записей. 10% уникальных ключей, ссылок и названий продуктов. Все данные собраны за 14 дней: с 11-07 по 31-0-23.
Имеются пропуски в столбце product_url - 234 записи и все для дилера с id 7 - Komus.<br>
Полных дублей в таблице нет, но есть повторяющиейся записи в зависимости от даты выгрузки.<br>
Столбец product_key содержит данные в текстового типа, он состоит из ключей не только в виде числа, но и в виде ссылок на сайты с продуктами.

Столбец `product_name` является целевым: по нему будем находить соответствие продуктов из базы заказчика.<br>
В названиях имеются как слова на кириллице, так и на латинице; есть специальные символы, единицы измерения разные: кг, л, мл; в некоторых названиях в конце указан код, состоящий из цифр и "-"; попадаются сокращения (например: дер. конструкций, д/удаления), встречаются буквы в разных регистрах.

- В таблице marketing_product 496 записей.
Имеются 2 записи, где отсутствует большая часть информации.<br>
Дубликаты отсутствуют.<br>
Столбец `name_1c` всего имеется `487` уникальных наименований.<br>
В названиях имеются опечатки, лишние пробелы, специальные символы, иногда отсутствуют пробелы между словами: часто сливаются слова на кириллице и латинице.<br> 
В части продуктов указана рекомендуемая концентрация, для некоторых продуктов указан вес (в кг.), а для других объём (в мл. или л.). Концентрация, вес или количество обычно указываются в конце названия.<br>
Встречаются буквы в разных регистрах.<br>
Максимальная длина наименования продукта 136 символов, минимальная - 30.

- В таблице `marketing_productdealerkey` 1700 записей, кол-во уникальных id дилеров совпадает с количеством в таблице `marketing_dealer`.
Пропусков и дубликатов нет.<br>
Столбец `key` имеет текстовый формат, в нём есть записи не только уникальных ключей, но и url продуктов.


2) **Предобработка данных.**

Для работы выбрали столбцы `1c_name` из таблицы `marketing_product` и `product_name` из `marketing_dealerprice`<br>
Произвели предобработку текста, чтобы названия в обеих таблицах были наиболее схожи, для этого написали функцию, позволяющую выполнить следующие действия:

    - убрать лишние пробелы;
    - привести к нижнему регистру;
    - добавить пробелы между русскими словами и английскими, как до, так и после;
    - убрать концентрацию, оставить только объём/вес.
    

3) **Разработка модели:**
- основная библиотека, которую мы использовали для поиска соответствия названий - это `SentenceTransformers`;
- в качестве модели была использована предварительно обученная модель `tsb-roberta-large`;
- корпус названий из marketing_dealerprice и каждое название из marketing_product закодированы при помощи `SentenceTransformers('stsb-roberta-large')`;
- для каждого вектора названия товара из `marketing_product` считается косинусное расстояние между ним и каждым вектором названий из `marketing_dealerprice`;
- получаем `top_k` самых похожих предложений, получивших наивысшие оценки сходства. `top_k` можно задавать оператору;

4) **Интеграция модели:**
- создан файла `'.ру'` для интеграции модели с работой `Backend-разработчиков`.

## Вывод:

построена модель, которая для списка товаров? производимиых и распространяемых заказчиком, выдает `top_k` наиболее подходящих семантически названий товаров с площадок дилеров.
Точность модели-

### Стек технологий: 
- язык программирования: `Python` 
- библиотеки для ML: `Pandas`, `Sklearn`, `nltk`, `numpy`, `sentence_transformers`, `pytorch`, `transformers`. 
